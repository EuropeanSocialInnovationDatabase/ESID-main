-- MySQL Script generated by MySQL Workbench
-- Mon 14 Aug 2017 09:44:54 BST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';



-- -----------------------------------------------------
-- Table `mydb`.`DataSources`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DataSources` ;

CREATE TABLE IF NOT EXISTS `DataSources` (
  `idDataSources` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(200) CHARACTER SET utf8 NULL,
  `Type` VARCHAR(200) NULL,
  `URL` VARCHAR(500) NULL,
  `DataIsOpen` VARCHAR(200) NULL,
  `RelatedToEU` VARCHAR(100) NULL,
  `AssociatedProject` VARCHAR(200) NULL,
  `DataDurationStart` DATE NULL,
  `DataDurationEnd` DATE NULL,
  `Theme` VARCHAR(200) NULL,
  `CountryCoverage` VARCHAR(450) NULL,
  `SocialInnovationDef` TEXT NULL,
  `MainEntities` VARCHAR(200) NULL,
  `DataSource` VARCHAR(1000) NULL,
  `InclusionCriteria` VARCHAR(1000) NULL,
  PRIMARY KEY (`idDataSources`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Actors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Actors` ;

CREATE TABLE IF NOT EXISTS `Actors` (
  `idActors` INT NOT NULL AUTO_INCREMENT,
  `ActorStandardisedID` VARCHAR(100) NULL,
  `ActorName` VARCHAR(500) CHARACTER SET utf8 NULL,
  `LegalEntityName` VARCHAR(500) NULL,
  `Type` VARCHAR(100) NULL,
  `SubType` VARCHAR(100) NULL,
  `Size` VARCHAR(200) NULL,
  `Budget` VARCHAR(200) NULL,
  `SourceOriginallyObtained` VARCHAR(100) NULL,
  `ActorWebsite` VARCHAR(300) NULL,
  `ActorFacebookPage` VARCHAR(300) NULL,
  `ActorLinkedInPage` VARCHAR(300) NULL,
  `ActorTwitterProfile` VARCHAR(300) NULL,
  `ObjectiveStatement` VARCHAR(1000) NULL,
  `ActorLinkedIn` VARCHAR(500) NULL,
  `PreviousName` VARCHAR(1500) NULL,
  `StartDate` DATE NULL,
  `EndDate` DATE NULL,
  `StillActive` BINARY NULL,
  `DataSources_idDataSources` INT NOT NULL,
  PRIMARY KEY (`idActors`),
  INDEX `fk_Actors_DataSources1_idx` (`DataSources_idDataSources` ASC),
  CONSTRAINT `fk_Actors_DataSources1`
    FOREIGN KEY (`DataSources_idDataSources`)
    REFERENCES `DataSources` (`idDataSources`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Projects` ;

CREATE TABLE IF NOT EXISTS `Projects` (
  `idProjects` INT NOT NULL AUTO_INCREMENT,
  `ProjectStandardisedID` VARCHAR(100) NULL,
  `ProjectName` VARCHAR(500) CHARACTER SET utf8 NULL,
  `PreviousNames` VARCHAR(1000) NULL,
  `Type` VARCHAR(100) NULL,
  `SGC` VARCHAR(200) NULL,
  `TechnologyArea` VARCHAR(200) NULL,
  `KET` VARCHAR(100) NULL,
  `DateStart` DATE NULL,
  `DateEnd` DATE NULL,
  `Ongoing` BINARY NULL,
  `ProjectWebpage` VARCHAR(200) NULL,
  `FacebookPage` VARCHAR(200) NULL,
  `ProjectTwitter` VARCHAR(200) NULL,
  `ProjectLinkedIn` VARCHAR(200) NULL,
  `FirstDataSource` VARCHAR(200) NULL,
  `DataSources_idDataSources` INT NOT NULL,
  PRIMARY KEY (`idProjects`),
  INDEX `fk_Projects_DataSources1_idx` (`DataSources_idDataSources` ASC),
  CONSTRAINT `fk_Projects_DataSources1`
    FOREIGN KEY (`DataSources_idDataSources`)
    REFERENCES `DataSources` (`idDataSources`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Actors_has_Projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Actors_has_Projects` ;

CREATE TABLE IF NOT EXISTS `Actors_has_Projects` (
  `Actors_idActors` INT NOT NULL,
  `Projects_idProjects` INT NOT NULL,
  `OrganisationRole` VARCHAR(200) NULL,
  PRIMARY KEY (`Actors_idActors`, `Projects_idProjects`),
  INDEX `fk_Actors_has_Projects_Projects1_idx` (`Projects_idProjects` ASC),
  INDEX `fk_Actors_has_Projects_Actors_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_Actors_has_Projects_Actors`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Projects_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DataFrom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DataFrom` ;

CREATE TABLE IF NOT EXISTS `DataFrom` (
  `idDataFrom` INT NOT NULL AUTO_INCREMENT,
  `TableName` VARCHAR(100) NULL,
  `EntityId` INT NULL,
  `ColumntName` VARCHAR(100) NULL,
  `CoulumnValue` VARCHAR(45) NULL,
  `DataSourceType` VARCHAR(100) NULL,
  `DataSourceName` VARCHAR(100) NULL,
  `DataURI` VARCHAR(500) NULL,
  `IsLocation` BINARY NULL,
  `LocationID` INT NULL,
  PRIMARY KEY (`idDataFrom`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SITweets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SITweets` ;

CREATE TABLE IF NOT EXISTS `SITweets` (
  `idSITweets` INT NOT NULL AUTO_INCREMENT,
  `User` VARCHAR(200) NULL,
  `Tweet` VARCHAR(500) NULL,
  `Location` VARCHAR(200) NULL,
  `TweetID` VARCHAR(200) NULL,
  `UserDescription` VARCHAR(300) NULL,
  `IsRetweet` BINARY NULL,
  PRIMARY KEY (`idSITweets`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TwitterUserNetwork`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TwitterUserNetwork` ;

CREATE TABLE IF NOT EXISTS `TwitterUserNetwork` (
  `ID` INT NOT NULL,
  `username` VARCHAR(100) NULL,
  `Location` VARCHAR(200) NULL,
  `Description` VARCHAR(300) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TwitterUser_follows_TwitterUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TwitterUser_follows_TwitterUser` ;

CREATE TABLE IF NOT EXISTS `TwitterUser_follows_TwitterUser` (
  `Follower` INT NOT NULL,
  `Followed` INT NOT NULL,
  PRIMARY KEY (`Follower`, `Followed`),
  INDEX `fk_TwitterUserNetwork_has_TwitterUserNetwork_TwitterUserNet_idx` (`Followed` ASC),
  INDEX `fk_TwitterUserNetwork_has_TwitterUserNetwork_TwitterUserNet_idx1` (`Follower` ASC),
  CONSTRAINT `fk_TwitterUserNetwork_has_TwitterUserNetwork_TwitterUserNetwo1`
    FOREIGN KEY (`Follower`)
    REFERENCES `TwitterUserNetwork` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TwitterUserNetwork_has_TwitterUserNetwork_TwitterUserNetwo2`
    FOREIGN KEY (`Followed`)
    REFERENCES `TwitterUserNetwork` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Location` ;

CREATE TABLE IF NOT EXISTS `Location` (
  `idLocation` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(100) NULL COMMENT 'Primary or Secundary\n',
  `Address` VARCHAR(500) CHARACTER SET utf8 NULL,
  `City` VARCHAR(500) CHARACTER SET utf8 NULL,
  `Country` VARCHAR(500) NULL,
  `PostCode` VARCHAR(100) NULL,
  `PhoneContact` VARCHAR(100) NULL,
  `EmailContact` VARCHAR(100) NULL,
  `Longitude` FLOAT NULL,
  `Latitude` FLOAT NULL,
  `NUTS3` VARCHAR(100) NULL,
  `NUTS2` VARCHAR(100) NULL,
  `NUTS1` VARCHAR(100) NULL,
  `FUA` VARCHAR(100) NULL,
  `Actors_idActors` INT NOT NULL,
  PRIMARY KEY (`idLocation`),
  INDEX `fk_table1_Actors1_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_table1_Actors1`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProjectLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProjectLocation` ;

CREATE TABLE IF NOT EXISTS `ProjectLocation` (
  `idLocation` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(100) NULL COMMENT 'Primary or Secundary\n',
  `LocationScope` VARCHAR(200) NULL COMMENT 'Location of the Project or Location Service area',
  `table1col` VARCHAR(45) NULL,
  `Address` VARCHAR(500) CHARACTER SET utf8 NULL,
  `City` VARCHAR(500) CHARACTER SET utf8 NULL,
  `Country` VARCHAR(500) NULL,
  `PostCode` VARCHAR(100) NULL,
  `PhoneContact` VARCHAR(100) NULL,
  `EmailContact` VARCHAR(100) NULL,
  `Longitude` FLOAT NULL,
  `Latitude` FLOAT NULL,
  `NUTS3` VARCHAR(100) NULL,
  `NUTS2` VARCHAR(100) NULL,
  `NUTS1` VARCHAR(100) NULL,
  `FUA` VARCHAR(100) NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idLocation`),
  INDEX `fk_OrgLocation_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_OrgLocation_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ActorsAdditionalData`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ActorsAdditionalData` ;

CREATE TABLE IF NOT EXISTS `ActorsAdditionalData` (
  `idActorsAdditionalData` INT NOT NULL AUTO_INCREMENT,
  `FieldName` VARCHAR(150) NULL,
  `FieldContent` TEXT NULL,
  `Actors_idActors` INT NOT NULL,
  `DateObtained` DATETIME NULL,
  `SourceURL` VARCHAR(500) NULL,
  PRIMARY KEY (`idActorsAdditionalData`, `Actors_idActors`),
  INDEX `fk_ActorsAdditionalData_Actors1_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_ActorsAdditionalData_Actors1`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`AdditionaProjectData`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AdditionaProjectData` ;

CREATE TABLE IF NOT EXISTS `AdditionaProjectData` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `FieldName` VARCHAR(100) NULL,
  `Value` TEXT NULL,
  `Projects_idProjects` INT NOT NULL,
  `DateObtained` DATETIME NULL,
  `SourceURL` VARCHAR(500) NULL,
  PRIMARY KEY (`id`, `Projects_idProjects`),
  INDEX `fk_AdditionaProjectData_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_AdditionaProjectData_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Actors_relates_to_Actors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Actors_relates_to_Actors` ;

CREATE TABLE IF NOT EXISTS `Actors_relates_to_Actors` (
  `Actors_idActors` INT NOT NULL,
  `Actors_idActors1` INT NOT NULL,
  `RelationshipType` VARCHAR(100) NULL,
  PRIMARY KEY (`Actors_idActors`, `Actors_idActors1`),
  INDEX `fk_Actors_has_Actors1_Actors2_idx` (`Actors_idActors1` ASC),
  INDEX `fk_Actors_has_Actors1_Actors1_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_Actors_has_Actors1_Actors1`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Actors1_Actors2`
    FOREIGN KEY (`Actors_idActors1`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`LegalEntityRegister`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LegalEntityRegister` ;

CREATE TABLE IF NOT EXISTS `LegalEntityRegister` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `NameOfLegalNameRegistry` VARCHAR(500) NULL,
  `LegalNameOfEntity` VARCHAR(500) NULL,
  `LegalUniqueID` VARCHAR(500) NULL,
  `RegistryCountry` VARCHAR(500) NULL,
  `Actors_idActors` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_LegalEntityRegister_Actors1_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_LegalEntityRegister_Actors1`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PublicSupport`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PublicSupport` ;

CREATE TABLE IF NOT EXISTS `PublicSupport` (
  `idPublicSupport` INT NOT NULL AUTO_INCREMENT,
  `SupportingOrganisationName` VARCHAR(500) NULL,
  `TypeOfSupport` VARCHAR(500) NULL,
  `StartDate` DATE NULL,
  `EndDate` DATE NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idPublicSupport`),
  INDEX `fk_PublicSupport_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_PublicSupport_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Projects_relates_to_Projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Projects_relates_to_Projects` ;

CREATE TABLE IF NOT EXISTS `Projects_relates_to_Projects` (
  `Projects_idProjects` INT NOT NULL,
  `Projects_idProjects1` INT NOT NULL,
  `RelationshipType` VARCHAR(200) NULL,
  PRIMARY KEY (`Projects_idProjects`, `Projects_idProjects1`),
  INDEX `fk_Projects_has_Projects_Projects2_idx` (`Projects_idProjects1` ASC),
  INDEX `fk_Projects_has_Projects_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_Projects_has_Projects_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Projects_has_Projects_Projects2`
    FOREIGN KEY (`Projects_idProjects1`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Outputs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Outputs` ;

CREATE TABLE IF NOT EXISTS `Outputs` (
  `idOutputs` INT NOT NULL AUTO_INCREMENT,
  `TypeOfOutput` VARCHAR(500) NULL,
  `DescriptionOfOutput` VARCHAR(2200) NULL,
  `Projects_idProjects` INT NOT NULL,
  `Actors_idActors` INT NOT NULL,
  PRIMARY KEY (`idOutputs`),
  INDEX `fk_Outputs_Projects1_idx` (`Projects_idProjects` ASC),
  INDEX `fk_Outputs_Actors1_idx` (`Actors_idActors` ASC),
  CONSTRAINT `fk_Outputs_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Outputs_Actors1`
    FOREIGN KEY (`Actors_idActors`)
    REFERENCES `Actors` (`idActors`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TypeOfSocialInnotation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TypeOfSocialInnotation` ;

CREATE TABLE IF NOT EXISTS `TypeOfSocialInnotation` (
  `idTypeOfSocialInnotation` INT NOT NULL AUTO_INCREMENT,
  `CriterionOutputs` INT NULL,
  `CriterionObjectives` INT NULL,
  `CriterionActors` INT NULL,
  `CriterionActorInteractions` INT NULL,
  `CriterionInnovativeness` INT NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idTypeOfSocialInnotation`),
  INDEX `fk_TypeOfSocialInnotation_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_TypeOfSocialInnotation_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`OrganisationStructure`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OrganisationStructure` ;

CREATE TABLE IF NOT EXISTS `OrganisationStructure` (
  `idOrg` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(100) NULL COMMENT 'Person, Departement, Organisation\n',
  `Name` VARCHAR(500) NULL,
  `Role` VARCHAR(500) NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idOrg`),
  INDEX `fk_Organisation_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_Organisation_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`OutreachImpact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OutreachImpact` ;

CREATE TABLE IF NOT EXISTS `OutreachImpact` (
  `idOutreachImpact` INT NOT NULL AUTO_INCREMENT,
  `Type` VARCHAR(500) NULL COMMENT 'Conference, News-article, publication, patent...',
  `Name` VARCHAR(500) NULL,
  `Description` VARCHAR(1000) NULL,
  `URL` VARCHAR(500) NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idOutreachImpact`),
  INDEX `fk_OutreachImpact_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_OutreachImpact_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PriorHistoryOfProject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PriorHistoryOfProject` ;

CREATE TABLE IF NOT EXISTS `PriorHistoryOfProject` (
  `idPriorHistoryOfProject` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(450) CHARACTER SET utf8 NULL,
  `Type` VARCHAR(450) NULL,
  `StartDate` DATE NULL,
  `EndDate` DATE NULL,
  `Relationship` VARCHAR(500) NULL,
  `Projects_idProjects` INT NOT NULL,
  PRIMARY KEY (`idPriorHistoryOfProject`),
  INDEX `fk_PriorHistoryOfProject_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_PriorHistoryOfProject_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
